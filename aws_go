1. NewSession 와 NewSessionWithOptions 의 차이점

둘다 session 을 만들어 주는 함수이지만, NewSession 는 좀더 심플한 설정을 사용할때 사용하고 NewSessionWithOptions 은 좀더 상세한 설정을 
사용할때 사용할 수 있다. 

입력 객체에 대해서 말하자면 NewSession의 경우는 aws.Config 를 받고 있다. 그에 반해 NewSessionWithOptions의 경우는 session.Options 을 받고 있다.

session.Options 의 경우 내부적으로 aws.Config를 포함하고 있다.

****************************************************************************************************************************

func NewSessionWithOptions

func NewSessionWithOptions(opts Options) (*Session, error)

NewSessionWithOptions returns a new Session created from SDK defaults, config files, environment, 
and user provided config files. This func uses the Options values to configure how the Session is created.

If the AWS_SDK_LOAD_CONFIG environment variable is set to a truthy value the shared config file (~/.aws/config)
will also be loaded in addition to the shared credentials file (~/.aws/credentials). Values set in both the shared config, 
and shared credentials will be taken from the shared credentials file. Enabling the Shared Config will also allow 
the Session to be built with retrieving credentials with AssumeRole set in the config.

// Equivalent to session.New
sess := session.Must(session.NewSessionWithOptions(session.Options{}))

// Specify profile to load for the session's config
sess := session.Must(session.NewSessionWithOptions(session.Options{
     Profile: "profile_name",
}))

// Specify profile for config and region for requests
sess := session.Must(session.NewSessionWithOptions(session.Options{
     Config: aws.Config{Region: aws.String("us-east-1")},
     Profile: "profile_name",
}))

// Force enable Shared Config support
sess := session.Must(session.NewSessionWithOptions(session.Options{
    SharedConfigState: session.SharedConfigEnable,
}))

============================================================================================================================

func NewSession

func NewSession(cfgs ...*aws.Config) (*Session, error)

NewSession returns a new Session created from SDK defaults, config files, environment, and user provided config files. 
Once the Session is created it can be mutated to modify the Config or Handlers. The Session is safe to be read concurrently, 
but it should not be written to concurrently.

If the AWS_SDK_LOAD_CONFIG environment variable is set to a truthy value the shared config file (~/.aws/config) 
will also be loaded in addition to the shared credentials file (~/.aws/credentials). Values set in both the shared config, 
and shared credentials will be taken from the shared credentials file. 

Enabling the Shared Config will also allow the Session to be built with retrieving credentials with AssumeRole
set in the config.

See the NewSessionWithOptions func for information on how to override or 
control through code how the Session will be created, such as specifying the config profile, 
and controlling if shared config is enabled or not.
